---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nginx-hs
spec:
  chartRef:
    kind: OCIRepository
    name: nginx-hs
  interval: 1h
  values:
    controllers:
      nginx:
        containers:
          app:
            image:
              repository: docker.io/library/nginx
              tag: 1.29.1-alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
            env:
              TZ: Australia/Melbourne
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 80
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 10m
                memory: 64Mi
              limits:
                memory: 128Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        annotations:
          gatus.home-operations.com/enabled: "true"
        hostnames:
          - hyde.services
        parentRefs:
          - name: envoy-cloudflare
            namespace: network
            sectionName: https
    configMaps:
      config:
        data:
          default.conf: |
            server {
                listen 80;
                server_name _;
                root /var/www/html;
                index index.html;
            }
    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /var/www/html
      config:
        type: configMap
        identifier: config
        globalMounts:
          - path: /etc/nginx/conf.d/default.conf
            subPath: default.conf
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /var/cache/nginx
            subPath: cache-nginx
          - path: /var/run
            subPath: run
