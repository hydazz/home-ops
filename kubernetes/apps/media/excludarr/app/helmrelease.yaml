---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: excludarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: excludarr
  values:
    controllers:
      excludarr:
        type: cronjob
        cronjob:
          schedule: "@weekly"
          suspend: true
          backoffLimit: 0
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
          timeZone: Australia/Melbourne
        containers:
          app:
            image:
              repository: docker.io/excludarr/excludarr
              tag: v1.1.3@sha256:27cce6632dc3cf26063db1a1ee2b7d27d3281352f30e0ad01c02ff2f50c6ac1b
            command:
              - /bin/bash
              - -c
              - |
                set -euo pipefail

                echo "=== Excludarr Content Management ==="
                echo "Container started at: $(date)"
                echo

                for service in radarr sonarr; do
                  echo "=== Processing ${service^} ==="
                  echo "Target service: $service"
                  echo

                  echo "--- Running exclude operation ---"
                  poetry run -C /app excludarr "$service" exclude -a not-monitored -d -y || {
                    echo "ERROR: Exclude operation failed for $service"
                    exit 1
                  }
                  echo "Exclude operation completed for $service"
                  echo

                  echo "--- Running re-add operation ---"
                  poetry run -C /app excludarr "$service" re-add -y || {
                    echo "ERROR: Re-add operation failed for $service"
                    exit 1
                  }
                  echo "Re-add operation completed for $service"
                  echo

                  echo "=== ${service^} Processing Complete ==="
                  echo
                done

                echo "=== All Operations Complete ==="
                echo "Content management completed successfully at: $(date)"
                printf '=%.0s' {1..50}
                echo
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    persistence:
      config-file:
        type: secret
        name: "{{ .Release.Name }}-secret"
        globalMounts:
          - path: /etc/excludarr/excludarr.yml
            subPath: excludarr.yml
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
            subPath: tmp
