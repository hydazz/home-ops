---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: immich
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      immich:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.142.1@sha256:06bc7715fa4c4a1641bd0b566c949cd7327f420632b480389fd4d1e70665d046
            env: &env
              DB_PORT: "5432"
              ENABLE_MAPBOX: "false"
              IMMICH_MACHINE_LEARNING_URL: http://localhost:3003
              IMMICH_MEDIA_LOCATION: /photos
              IMMICH_SERVER_URL: http://localhost:2283
              LOG_LEVEL: verbose
              NODE_ENV: "production"
              REDIS_HOSTNAME: dragonfly.databases.svc.cluster.local
              REDIS_PORT: "6379"
            envFrom:
              - secretRef:
                  name: &secret "{{ .Release.Name }}-secret"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: &port 2283
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 2Gi
          machine-learning:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.142.1@sha256:9855f6a0a998db508ca97894997b17f3a0a61e9388b204d861110c19c42814eb
            envFrom:
              - secretRef:
                  name: *secret
            env:
              MPLCONFIGDIR: "/cache/matplotlib"
              <<: *env
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
        hostnames:
          - "{{ .Release.Name }}.hyde.services"
        parentRefs:
          - name: envoy-external
            namespace: network
            sectionName: https
    persistence:
      library:
        type: nfs
        server: 192.168.42.20
        path: /mnt/Slow/Media/Immich
        globalMounts:
          - path: /photos
      machine-learning-cache:
        existingClaim: "{{ .Release.Name }}-cache"
        globalMounts:
          - path: /cache
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.reverse-geocoding-dump
            subPath: geocoding
          - path: /usr/src/app/.transformers_cache
            subPath: transformers
          - path: /cache/matplotlib
            subPath: matplotlib
          - path: /tmp
            subPath: tmp
