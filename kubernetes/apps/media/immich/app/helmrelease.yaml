---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      server:
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
            envFrom:
              - secretRef:
                  name: &secret "{{ .Release.Name }}-secret"
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.137.3@sha256:e517f806457057d44695152a0af2dfa094225a7d85eb37f518925e68864c658d
            env: &env
              DB_PORT: "5432"
              ENABLE_MAPBOX: "false"
              IMMICH_MACHINE_LEARNING_URL: http://immich-machine-learning.media.svc.cluster.local:3003
              IMMICH_MEDIA_LOCATION: /photos
              IMMICH_SERVER_URL: http://immich-server.media.svc.cluster.local:2283
              LOG_LEVEL: verbose
              NODE_ENV: "production"
              REDIS_HOSTNAME: dragonfly.databases.svc.cluster.local
              REDIS_PORT: "6379"
            envFrom:
              - secretRef:
                  name: *secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: &port 2283
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 2Gi
      machine-learning:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.137.3@sha256:ef517c041fa4a6a84a6c3c4f88a1124058e686c9c92bf09a973e7e60c3c3ea1e
            envFrom:
              - secretRef:
                  name: *secret
            env:
              <<: *env
              MPLCONFIGDIR: "/cache/matplotlib"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      server:
        controller: server
        ports:
          http:
            port: *port
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${D_HS}"]
        parentRefs:
          - name: external
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: server
                port: *port
    persistence:
      library:
        type: nfs
        server: 192.168.42.20
        path: /mnt/Slow/Media/Immich
        globalMounts:
          - path: /photos
      machine-learning-cache:
        existingClaim: "{{ .Release.Name }}-cache"
        advancedMounts:
          machine-learning:
            app:
              - path: /cache
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.reverse-geocoding-dump
            subPath: geocoding
          - path: /usr/src/app/.transformers_cache
            subPath: transformers
          - path: /cache/matplotlib
            subPath: matplotlib
          - path: /tmp
            subPath: tmp
