---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tdarr
spec:
  chartRef:
    kind: OCIRepository
    name: tdarr
  interval: 1h
  values:
    controllers:
      tdarr:
        containers:
          app:
            image:
              repository: ghcr.io/haveagitgat/tdarr
              tag: 2.49.01@sha256:a1a7ac0bd80560c7853c47c8cb174e51b2867ac332102b6fbe1616ef97fbad2e
            command:
              # bypass supervisor
              - /usr/bin/node
            args:
              - --max-old-space-size=16384
              - /app/Tdarr_Server/srcug/main.js
            env:
              TZ: Australia/Melbourne
              inContainer: true
              serverIP: 0.0.0.0
              serverPort: &serverPort 8266
              webUIPort: &port 80
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v2/status
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 30m
                memory: 512Mi
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
          server:
            port: *serverPort
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.hyde.services"
        parentRefs:
          - name: envoy-internal
            namespace: network
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
        globalMounts:
          - path: /app/server
            subPath: server
          - path: /app/configs
            subPath: config
      media:
        type: nfs
        server: 192.168.42.20
        path: /mnt/Slow/Media/Plex Media
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /app/logs
            subPath: logs
          - path: /tmp
            subPath: tmp
