---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app barman-cloud
spec:
  chartRef:
    kind: OCIRepository
    name: barman-cloud
  interval: 1h
  values:
    controllers:
      barman-cloud:
        containers:
          app:
            image:
              repository: ghcr.io/cloudnative-pg/plugin-barman-cloud
              tag: v0.7.0@sha256:641877c4dc6b879542bf7c6997ac4ae5db57e7543fc6ccced78b5b20e144880d
            args:
              - operator
              - --leader-elect
              - --server-cert=/server/tls.crt
              - --server-key=/server/tls.key
              - --client-cert=/client/tls.crt
              - --server-address=:9090
            env:
              # renovate: datasource=docker depName=ghcr.io/cloudnative-pg/plugin-barman-cloud-sidecar
              SIDECAR_IMAGE: ghcr.io/cloudnative-pg/plugin-barman-cloud-sidecar:v0.7.0@sha256:6c0023cce6a21cabbf3019c0a53f66dab18617871e63c38afbb9bef87e4daf62
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: &port 8081
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /readyz
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
    rbac:
      roles:
        leader-election-role:
          type: Role
          rules:
            - apiGroups:
                - ""
              resources:
                - configmaps
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - coordination.k8s.io
              resources:
                - leases
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
                - patch
        metrics-auth-role:
          type: ClusterRole
          rules:
            - apiGroups:
                - authentication.k8s.io
              resources:
                - tokenreviews
              verbs:
                - create
            - apiGroups:
                - authorization.k8s.io
              resources:
                - subjectaccessreviews
              verbs:
                - create
        metrics-reader:
          type: ClusterRole
          rules:
            - nonResourceURLs:
                - /metrics
              verbs:
                - get
        objectstore-editor-role:
          type: ClusterRole
          rules:
            - apiGroups:
                - barmancloud.cnpg.io
              resources:
                - objectstores
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - barmancloud.cnpg.io
              resources:
                - objectstores/status
              verbs:
                - get
        objectstore-viewer-role:
          type: ClusterRole
          rules:
            - apiGroups:
                - barmancloud.cnpg.io
              resources:
                - objectstores
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - barmancloud.cnpg.io
              resources:
                - objectstores/status
              verbs:
                - get
        barman-cloud:
          type: ClusterRole
          rules:
            - apiGroups:
                - ""
              resources:
                - secrets
              verbs:
                - create
                - delete
                - get
                - list
                - watch
            - apiGroups:
                - barmancloud.cnpg.io
              resources:
                - objectstores
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - barmancloud.cnpg.io
              resources:
                - objectstores/finalizers
              verbs:
                - update
            - apiGroups:
                - barmancloud.cnpg.io
              resources:
                - objectstores/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - postgresql.cnpg.io
              resources:
                - backups
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - rolebindings
                - roles
              verbs:
                - create
                - get
                - list
                - patch
                - update
                - watch
      bindings:
        leader-election-rolebinding:
          type: RoleBinding
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: Role
            identifier: leader-election-role
          subjects: &subject
            - kind: ServiceAccount
              identifier: *app
              namespace: databases
        metrics-auth-rolebinding:
          type: ClusterRoleBinding
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            identifier: metrics-auth-role
          subjects: *subject
        cnpg-barman-cloud-binding:
          type: ClusterRoleBinding
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            identifier: barman-cloud
          subjects: *subject
    serviceAccount:
      barman-cloud: {}
    rawResources:
      issuer:
        apiVersion: cert-manager.io/v1
        kind: ClusterIssuer
        spec:
          spec:
            selfSigned: {}
      client: &cert
        apiVersion: cert-manager.io/v1
        kind: Certificate
        spec:
          spec: &certSpec
            commonName: barman-cloud-client
            duration: 2160h
            isCA: false
            issuerRef:
              name: barman-cloud-issuer
              kind: ClusterIssuer
              group: cert-manager.io
            renewBefore: 360h
            secretName: &clientCert barman-cloud-client-tls
            usages:
              - client auth
      server:
        <<: *cert
        spec:
          spec:
            <<: *certSpec
            commonName: *app
            dnsNames:
              - *app
            secretName: &serverCert barman-cloud-server-tls
            usages:
              - server auth
    service:
      app:
        annotations:
          cnpg.io/pluginClientSecret: *clientCert
          cnpg.io/pluginPort: "9090"
          cnpg.io/pluginServerSecret: *serverCert
        labels:
          cnpg.io/pluginName: barman-cloud.cloudnative-pg.io
        ports:
          http:
            port: 9090
    persistence:
      client:
        type: secret
        name: *clientCert
      server:
        type: secret
        name: *serverCert
