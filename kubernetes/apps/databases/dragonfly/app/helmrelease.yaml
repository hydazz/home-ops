---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app dragonfly-operator
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: dragonfly-operator
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      dragonfly-operator:
        containers:
          app:
            image:
              repository: ghcr.io/dragonflydb/operator
              tag: v1.2.1@sha256:6aa4f9e21d7b5d1f17856e25e110d1c6762bdda27640ddfb33684b269fa826f7
            command:
              - /manager
            args:
              - --health-probe-bind-address=:8081
              - --metrics-bind-address=:8080
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: &port 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /readyz
                    port: *port
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
    defaultPodOptions:
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        runAsNonRoot: true
    rbac:
      roles:
        dragonfly-operator:
          type: ClusterRole
          rules:
            - apiGroups:
                - coordination.k8s.io
              resources:
                - leases
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
                - patch
            - apiGroups:
                - ""
              resources:
                - pods
                - services
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps
              resources:
                - statefulsets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - policy
              resources:
                - poddisruptionbudgets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - dragonflydb.io
              resources:
                - dragonflies
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - dragonflydb.io
              resources:
                - dragonflies/finalizers
              verbs:
                - update
            - apiGroups:
                - dragonflydb.io
              resources:
                - dragonflies/status
              verbs:
                - get
                - patch
                - update
      bindings:
        dragonfly-operator:
          type: ClusterRoleBinding
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            identifier: dragonfly-operator
          subjects:
            - kind: ServiceAccount
              identifier: *app
              namespace: databases
    serviceAccount:
      dragonfly-operator: {}
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          metrics:
            port: 8080
    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
