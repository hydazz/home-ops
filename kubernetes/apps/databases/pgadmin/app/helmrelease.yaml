---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app pgadmin
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      pgadmin:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/dpage/pgadmin4
              tag: 9.7@sha256:5929bac24d91b5d7219686c8d66a703cd5851a498620bca4f5e4263873b015c0
            env:
              TZ: Australia/Melbourne
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            #probes:
            #  liveness: &probes
            #    enabled: true
            #    custom: true
            #    spec:
            #      httpGet:
            #        path: /misc/ping
            #        port: &port 80
            #      initialDelaySeconds: 0
            #      periodSeconds: 10
            #      timeoutSeconds: 1
            #      failureThreshold: 3
            #  readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              # /pgadmin4/config_distro.py: Read-only file system:
              # readOnlyRootFilesystem: true
              # /venv/bin/python3: Operation not permitted:
              # capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 15m
                memory: 256M
              limits:
                memory: 512M
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: 80
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${D_HS}"
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /var/lib/pgadmin
      server-json:
        type: configMap
        name: "{{ .Release.Name }}-servers-configmap"
        globalMounts:
          - path: /pgadmin4/servers.json
            subPath: servers.json
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /var/log/pgadmin
            subPath: logs
          - path: /tmp
            subPath: tmp
