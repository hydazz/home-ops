---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cert-manager.io/certificate_v1.json
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${D_HS//./-}-production"
spec:
  secretName: "${D_HS//./-}-production-tls"
  secretTemplate:
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: mailserver,network
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${D_HS}"
  dnsNames: ["${D_HS}", "*.${D_HS}", "*.k8s.${D_HS}", "*.wing.${D_HS}"]
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${D_HCA//./-}-production"
spec:
  secretName: "${D_HCA//./-}-production-tls"
  secretTemplate:
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: network
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${D_HCA}"
  dnsNames: ["${D_HCA}", "*.${D_HCA}"]
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${D_IGI//./-}-production"
spec:
  secretName: "${D_IGI//./-}-production-tls"
  secretTemplate:
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: network
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${D_IGI}"
  dnsNames: ["${D_IGI}", "*.${D_IGI}"]
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${D_SN//./-}-production"
spec:
  secretName: "${D_SN//./-}-production-tls"
  secretTemplate:
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: network
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${D_SN}"
  dnsNames: ["${D_SN}", "*.${D_SN}"]
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${D_TACA//./-}-production"
spec:
  secretName: "${D_TACA//./-}-production-tls"
  secretTemplate:
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: network
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${D_TACA}"
  dnsNames: ["${D_TACA}", "*.${D_TACA}"]
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${D_TAN//./-}-production"
spec:
  secretName: "${D_TAN//./-}-production-tls"
  secretTemplate:
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: network
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${D_TAN}"
  dnsNames: ["${D_TAN}", "*.${D_TAN}"]
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${D_LMVCA//./-}-production"
spec:
  secretName: "${D_LMVCA//./-}-production-tls"
  secretTemplate:
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: network
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${D_LMVCA}"
  dnsNames: ["${D_LMVCA}", "*.${D_LMVCA}"]
