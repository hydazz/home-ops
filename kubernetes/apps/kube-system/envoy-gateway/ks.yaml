---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app envoy-gateway-operator
  namespace: &namespace kube-system
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2
      kind: HelmRelease
      name: envoy-gateway
      namespace: *namespace
    - apiVersion: gateway.networking.k8s.io/v1
      kind: GatewayClass
      name: envoy-gateway
  healthCheckExprs:
    - apiVersion: gateway.networking.k8s.io/v1
      kind: GatewayClass
      failed: status.conditions.filter(e, e.type == 'Accepted').all(e, e.status == 'False')
      inProgress: status.conditions.filter(e, e.type == 'Accepted').all(e, e.status == 'Unknown')
      current: status.conditions.filter(e, e.type == 'Accepted').all(e, e.status == 'True')
  interval: 1h
  path: ./kubernetes/apps/kube-system/envoy-gateway/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: *namespace
  timeout: 5m
  wait: true
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app envoy-gateway-instances
  namespace: &namespace kube-system
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  dependsOn:
    - name: certificates
      namespace: kube-system
    - name: envoy-gateway-operator
      namespace: kube-system
  interval: 1h
  path: ./kubernetes/apps/kube-system/envoy-gateway/gateways
  postBuild:
    substituteFrom:
      - name: cluster-secrets
        kind: Secret
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: *namespace
  timeout: 5m
  wait: true
