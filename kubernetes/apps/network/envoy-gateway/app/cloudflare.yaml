---
# yaml-language-server: $schema=https://raw.githubusercontent.com/envoyproxy/gateway/refs/heads/main/charts/gateway-helm/crds/generated/gateway.envoyproxy.io_envoyproxies.yaml
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: envoy-cloudflare
spec:
  logging:
    level:
      default: info
  provider:
    type: Kubernetes
    kubernetes:
      envoyDeployment:
        replicas: 2
        container:
          image: mirror.gcr.io/envoyproxy/envoy:v1.35.2
          resources:
            requests:
              cpu: 100m
            limits:
              memory: 1Gi
      envoyService:
        name: envoy-cloudflare
        externalTrafficPolicy: Cluster
  ipFamily: DualStack
  shutdown:
    drainTimeout: 180s
  telemetry:
    metrics:
      prometheus:
        compression:
          type: Gzip
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/gateway.networking.k8s.io/gatewayclass_v1.json
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: envoy-cloudflare
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
  parametersRef:
    group: gateway.envoyproxy.io
    kind: EnvoyProxy
    name: envoy-cloudflare
    namespace: network
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/gateway.networking.k8s.io/gateway_v1.json
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: envoy-cloudflare
  labels:
    type: cloudflare
  annotations:
    external-dns.alpha.kubernetes.io/target: &hostname cloudflare.${D_HS}
spec:
  gatewayClassName: envoy-cloudflare
  infrastructure:
    annotations:
      external-dns.alpha.kubernetes.io/hostname: *hostname
      lbipam.cilium.io/ips: 2404:e80:661b:42::140 # exposed over IPv6 as the external gateway is using my 1 and only IPv4 address
  listeners:
    - &https
      # ===== HS =====
      name: https-hs-apex
      protocol: HTTPS
      port: 443
      hostname: "${D_HS}"
      allowedRoutes:
        namespaces:
          from: All
      tls: &tls_hs
        certificateRefs:
          - kind: Secret
            name: ${D_HS//./-}-tls
    - <<: *https
      name: https-hs
      hostname: "*.${D_HS}"
      tls: *tls_hs
    # ===== HCA =====
    - <<: *https
      name: https-hca-apex
      hostname: "${D_HCA}"
      tls: &tls_hca
        certificateRefs:
          - kind: Secret
            name: ${D_HCA//./-}-tls
    - <<: *https
      name: https-hca
      hostname: "*.${D_HCA}"
      tls: *tls_hca
    # ===== imagegenius.io =====
    - <<: *https
      name: https-igi-apex
      hostname: "imagegenius.io"
      tls: &tls_igi
        certificateRefs:
          - kind: Secret
            name: imagegenius-io-tls
    - <<: *https
      name: https-igi
      hostname: "*.imagegenius.io"
      tls: *tls_igi
    # ===== LMVCA =====
    - <<: *https
      name: https-lmvca-apex
      hostname: "${D_LMVCA}"
      tls: &tls_lmvca
        certificateRefs:
          - kind: Secret
            name: ${D_LMVCA//./-}-tls
    - <<: *https
      name: https-lmvca
      hostname: "*.${D_LMVCA}"
      tls: *tls_lmvca
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/envoyproxy/gateway/refs/heads/main/charts/gateway-helm/crds/generated/gateway.envoyproxy.io_clienttrafficpolicies.yaml
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: ClientTrafficPolicy
metadata:
  name: envoy-cloudflare
spec:
  clientIPDetection:
    customHeader:
      name: "CF-Connecting-IP"
  http3: {}
  targetRefs:
    - group: gateway.networking.k8s.io
      kind: Gateway
      name: envoy-cloudflare
  tls:
    minVersion: "1.2"
    alpnProtocols:
      - h2
      - http/1.1
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/envoyproxy/gateway/refs/heads/main/charts/gateway-helm/crds/generated/gateway.envoyproxy.io_clienttrafficpolicies.yaml
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: BackendTrafficPolicy
metadata:
  name: envoy-cloudflare
spec:
  targetRefs:
    - group: gateway.networking.k8s.io
      kind: Gateway
      name: envoy-cloudflare
  compression:
    - type: Brotli
    - type: Gzip
