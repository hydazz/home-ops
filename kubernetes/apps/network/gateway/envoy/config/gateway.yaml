---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: envoy
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
  parametersRef:
    group: gateway.envoyproxy.io
    kind: EnvoyProxy
    name: config
    namespace: network
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: external
  annotations:
    external-dns.alpha.kubernetes.io/target: "direct.${D_HS}"
spec:
  gatewayClassName: envoy
  addresses:
    - type: IPAddress
      value: "192.168.42.130"
  infrastructure:
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "direct.${D_HS}"
      lbipam.cilium.io/ips: "192.168.42.130"
  listeners:
    - name: https
      protocol: HTTPS
      port: 443
      hostname: "*.${D_HS}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${D_HS//./-}-production-tls
    - name: https-apex
      protocol: HTTPS
      port: 443
      hostname: "${D_HS}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${D_HS//./-}-production-tls
    - name: https-hca
      protocol: HTTPS
      port: 443
      hostname: "*.${D_HCA}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${D_HCA//./-}-production-tls
    - name: https-hca-apex
      protocol: HTTPS
      port: 443
      hostname: "${D_HCA}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${D_HCA//./-}-production-tls
    - name: https-igi
      protocol: HTTPS
      port: 443
      hostname: "*.${D_IGI}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${D_IGI//./-}-production-tls
    - name: https-igi-apex
      protocol: HTTPS
      port: 443
      hostname: "${D_IGI}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${D_IGI//./-}-production-tls
    - name: https-sn
      protocol: HTTPS
      port: 443
      hostname: "*.${D_SN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${D_SN//./-}-production-tls
    - name: https-sn-apex
      protocol: HTTPS
      port: 443
      hostname: "${D_SN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${D_SN//./-}-production-tls
    - name: https-taca
      protocol: HTTPS
      port: 443
      hostname: "*.${D_TACA}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${D_TACA//./-}-production-tls
    - name: https-taca-apex
      protocol: HTTPS
      port: 443
      hostname: "${D_TACA}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${D_TACA//./-}-production-tls
    - name: https-tan
      protocol: HTTPS
      port: 443
      hostname: "*.${D_TAN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${D_TAN//./-}-production-tls
    - name: https-tan-apex
      protocol: HTTPS
      port: 443
      hostname: "${D_TAN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${D_TAN//./-}-production-tls
    - name: https-lmvca
      protocol: HTTPS
      port: 443
      hostname: "*.${D_LMVCA}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${D_LMVCA//./-}-production-tls
    - name: https-lmvca-apex
      protocol: HTTPS
      port: 443
      hostname: "${D_LMVCA}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${D_LMVCA//./-}-production-tls
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: internal
  annotations:
    external-dns.alpha.kubernetes.io/target: "internal.${D_HS}"
spec:
  gatewayClassName: envoy
  addresses:
    - type: IPAddress
      value: "192.168.42.120"
  infrastructure:
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "internal.${D_HS}"
      lbipam.cilium.io/ips: "192.168.42.120"
  listeners:
    - name: http
      protocol: HTTP
      port: 80
      hostname: "*.${D_HS}"
      allowedRoutes:
        namespaces:
          from: Same
    - name: https
      protocol: HTTPS
      port: 443
      hostname: "*.${D_HS}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${D_HS//./-}-production-tls
