---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless-ai
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: paperless-ai
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      paperless-ai:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/clusterzx/paperless-ai
              tag: 3.0.7@sha256:25e1c501891e2d409f1df92e64e4e20b379a0197b7cd35cf98b49184d9da6814
            env:
              ADD_AI_PROCESSED_TAG: "no"
              AI_PROCESSED_TAG_NAME: ai-processed
              AI_PROVIDER: openai
              DISABLE_AUTOMATIC_PROCESSING: "no"
              OPENAI_MODEL: gpt-4o-mini
              PAPERLESS_AI_PORT: "3000"
              PAPERLESS_API_URL: http://paperless.self-hosted.svc.cluster.local:8000/api
              PAPERLESS_USERNAME: ai
              PROCESS_ONLY_NEW_DOCUMENTS: "yes"
              PROCESS_PREDEFINED_DOCUMENTS: "no"
              SCAN_INTERVAL: "*/30 * * * *"
              USE_EXISTING_DATA: "no"
              USE_PROMPT_TAGS: "no"
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            resources:
              requests:
                cpu: 10m
                memory: 1Gi
              limits:
                cpu: 2
                memory: 4Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: 3000
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${D_HS}"
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https-hs
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /app/data
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
            subPath: tmp
          - path: /app/logs
            subPath: logs
          - path: /home/node
            subPath: node
