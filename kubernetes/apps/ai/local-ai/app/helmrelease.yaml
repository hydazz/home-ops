---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: local-ai
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      local-ai:
        containers:
          app: &app
            image:
              repository: docker.io/localai/localai
              tag: v3.3.0-gpu-nvidia-cuda-12@sha256:e9b62c3e7304826bd14dcd9646a565c74f1bffed096fbfc879be160b64720b6e
            env: &env
              CONTEXT_SIZE: 512
              DEBUG: true
              MODELS_PATH: /models
              PORT: &port 8080
              THREADS: 8
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /readyz
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 200m
                memory: 1Gi
              limits:
                memory: 24Gi
                nvidia.com/gpu: 1
        # preloads the models/backends if they are changed/deleted
        initContainers:
          preload-models:
            <<: *app
            env:
              <<: *env
              MODELS: ollama://gemma:2b
              EXTERNAL_BACKENDS: llama-cpp
            command:
              - sh
              - -c
              - |
                /local-ai &
                pid=$!
                echo "Waiting for LocalAI to become ready..."
                until curl -sf http://localhost:8080/readyz; do
                  sleep 5
                done
                echo "LocalAI is ready, exiting preload container"
                kill $pid
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
    defaultPodOptions:
      runtimeClassName: nvidia
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${D_HS}"]
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
    persistence:
      models:
        existingClaim: local-ai-models
        globalMounts:
          - path: /models
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /configuration
            subPath: configuration
          - path: /backends
            subPath: backends
          - path: /tmp
            subPath: tmp
