---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nextcloud-shca
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: nextcloud-shca
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      nextcloud:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          copy-config:
            image: &image
              repository: docker.io/library/nextcloud
              tag: 31.0.9-fpm-alpine@sha256:7bebcc545f996c159f06632ec2f4a69969788c403ee7e8ab8cd7fe3cb26d08c3
            command:
              - sh
              - -c
              - "cp -r /usr/src/nextcloud/config/*.php /var/www/html/config/"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
        containers:
          app:
            image: *image
            env: &env
              NEXTCLOUD_TRUSTED_DOMAINS: storage.${D_HCA}
              NEXTCLOUD_DATA_DIR: /var/www/html/data
              REDIS_HOST: dragonfly.databases.svc.cluster.local
              REDIS_DATABASE: 3
            envFrom: &envFrom
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 15m
                memory: 256Mi
              limits:
                memory: 1Gi
          cron:
            image: *image
            command:
              - sh
              - -c
              - |
                while :; do
                  php cron.php || true
                  sleep 300
                done
            env: *env
            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
          nginx:
            image:
              repository: docker.io/library/nginx
              tag: 1.29.1-alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /status.php
                    port: &port 80
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 256Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
        hostnames:
          - storage.${D_HCA}
        parentRefs:
          - name: envoy-external
            namespace: network
            sectionName: https
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /settings/ajax/checksetup
            backendRefs:
              - identifier: app
                port: *port
            timeouts:
              request: 300s
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /var/www/html
      archive-nfs:
        type: nfs
        server: 192.168.42.20
        path: /mnt/Fast/Archive
        globalMounts:
          - path: /mnt/Archive
      public-nfs:
        type: nfs
        server: 192.168.42.20
        path: /mnt/Fast/Public
        globalMounts:
          - path: /mnt/Public
      configs:
        type: configMap
        name: nextcloud-shca-configmap
        globalMounts:
          - path: /var/www/html/config/custom.config.php
            subPath: custom.config.php
          - path: /usr/local/etc/php/conf.d/nextcloud.ini
            subPath: nextcloud.ini
          - path: /usr/local/etc/php-fpm.d/www.conf
            subPath: www.conf
          - path: /etc/nginx/conf.d/default.conf
            subPath: default.conf
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
            subPath: tmp
          - path: /cache
            subPath: cache
          - path: /var/cache/nginx
            subPath: cache-nginx
          - path: /var/run
            subPath: run

  # some mounts with sensitive names
  valuesFrom:
    - kind: Secret
      name: nextcloud-shca-values
