---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nextcloud-shs
spec:
  chartRef:
    kind: OCIRepository
    name: nextcloud-shs
  interval: 1h
  values:
    controllers:
      nextcloud:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          copy-config:
            image: &image
              repository: docker.io/library/nextcloud
              tag: 32.0.0@sha256:3e70e4dfe882ef44738fdc30d9896fb07c12febb27c4a1177e3d63dc0004a0b4
            command:
              - sh
              - -c
              - "cp -r /usr/src/nextcloud/config/*.php /var/www/html/config/"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
        containers:
          app:
            image: *image
            env:
              NEXTCLOUD_TRUSTED_DOMAINS: storage.hyde.services
              NEXTCLOUD_DATA_DIR: /var/www/html/data
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /status.php
                    port: &port 80
                    httpHeaders:
                      - name: Host
                        value: storage.hyde.services
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 15m
                memory: 256Mi
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          gatus.home-operations.com/enabled: "true"
          # use gatus to run cron jobs (imo least jank method)
          gatus.home-operations.com/endpoint: |-
            url: https://storage.hyde.services/cron.php
        hostnames:
          - storage.hyde.services
        parentRefs:
          - name: envoy-external
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
            filters:
              - type: ResponseHeaderModifier
                responseHeaderModifier:
                  add:
                    - name: Strict-Transport-Security
                      value: "max-age=31536000; includeSubDomains; preload"
    configMaps:
      config:
        data:
          custom.config.php: |
            <?php
            $CONFIG = array(
            	'overwriteprotocol' => 'https',
            	'overwrite.cli.url' => 'https://storage.hyde.services',
            	'overwritehost' => 'storage.hyde.services',
            	'check_data_directory_permissions' => false,
            	'default_phone_region' => 'AU',
            	'trusted_proxies' => array(
            		0 => '127.0.0.1',
            		1 => '10.42.0.0/16',
            	),
            	'trusted_domains' => array(
            		0 => '127.0.0.1',
            		1 => 'storage.hyde.services',
            	),
            	'simpleSignUpLink.shown' => false,
            	'cache_path' => '/cache',
            	'forwarded_for_headers' => array('X-Forwarded-For'),
            	'maintenance_window_start' => 100,
            	'memcache.distributed' => '\OC\Memcache\Redis',
            	'memcache.locking' => '\OC\Memcache\Redis',
            	'redis' => array(
            		'host' => 'dragonfly.databases.svc.cluster.local',
            		'port' => 6379,
            		'dbindex' => 3,
            	),
            );
          nextcloud.ini: |
            session.save_handler = redis
            session.save_path = "tcp://dragonfly.databases.svc.cluster.local:6379"
            redis.session.locking_enabled = 1
            redis.session.lock_retries = -1
            redis.session.lock_wait_time = 10000
            upload_max_filesize = 16G
            post_max_size = 16G
            memory_limit = 512M
            max_execution_time = 3600
          www.conf: |
            [www]
            listen = 127.0.0.1:9000
            pm = dynamic
            pm.max_children = 50
            pm.start_servers = 12
            pm.min_spare_servers = 6
            pm.max_spare_servers = 18
          remoteip.conf: |
            RemoteIPHeader X-Forwarded-For
            RemoteIPInternalProxy 10.42.0.0/16
    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /var/www/html
      alex-nfs:
        type: nfs
        server: 192.168.42.20
        path: /mnt/Fast/Alex
        globalMounts:
          - path: /var/www/html/data/alex/files
      configs:
        type: configMap
        identifier: config
        globalMounts:
          - path: /var/www/html/config/custom.config.php
            subPath: custom.config.php
          - path: /usr/local/etc/php/conf.d/nextcloud.ini
            subPath: nextcloud.ini
          - path: /usr/local/etc/php-fpm.d/www.conf
            subPath: www.conf
          - path: /etc/apache2/conf-available/remoteip.conf
            subPath: remoteip.conf
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
            subPath: tmp
          - path: /cache
            subPath: cache
          - path: /var/run
            subPath: run
