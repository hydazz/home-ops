---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app mailu
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: mailu
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      front:
        annotations: &reloader
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/mailu/nginx
              tag: 2024.06.43@sha256:33ec8e12608d9b0dbb7532f7aa3706bea9f831a9b2450ef69ca15371cf3c448e
            env:
              LETSENCRYPT_SHORTCHAIN: "false"
              REAL_IP_FROM: 0.0.0.0/0
              REAL_IP_HEADER: X-Forwarded-For
              WEBDAV: none
              WEBROOT_REDIRECT: /webmail
            envFrom:
              - configMapRef:
                  name: "{{ .Release.Name }}-env-configmap"
            probes:
              liveness: &frontProbes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 80
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *frontProbes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
            #  capabilities:
            #    add:
            #      - NET_BIND_SERVICE
            #      - CHOWN
            #      - SETGID
            #      - SETUID
            #      - DAC_OVERRIDE
            #    drop:
            #      - ALL
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 1Gi
      admin:
        annotations: *reloader
        containers:
          app:
            image:
              repository: ghcr.io/mailu/admin
              tag: 2024.06.43@sha256:75fb5afaa356a55c9c28aace48b4cbe7f022582017f48812bf7e86a9ee67db2c
            env:
              AUTH_RATELIMIT_EXEMPTION_LENGTH: "86400"
              AUTH_RATELIMIT_IP: 60/hour
              AUTH_RATELIMIT_IP_V4_MASK: "24"
              AUTH_RATELIMIT_IP_V6_MASK: "56"
              AUTH_RATELIMIT_USER: 100/day
              AUTH_REQUIRE_TOKENS: "false"
              BABEL_DEFAULT_LOCALE: en
              BABEL_DEFAULT_TIMEZONE: UTC
              BOOTSTRAP_SERVE_LOCAL: "true"
              CREDENTIAL_ROUNDS: "12"
              DB_FLAVOR: postgresql
              DEBUG: "false"
              DEBUG_PROFILER: "false"
              DEBUG_TB_INTERCEPT_REDIRECTS: "false"
              DEFAULT_QUOTA: "1000000000"
              DEFAULT_SPAM_THRESHOLD: "80"
              DISABLE_STATISTICS: "false"
              DKIM_PATH: /dkim/{domain}.{selector}.key
              DKIM_SELECTOR: dkim
              DOMAIN_REGISTRATION: "false"
              FETCHMAIL_ENABLED: "false"
              INITIAL_ADMIN_ACCOUNT: alex
              INITIAL_ADMIN_DOMAIN: ${D_HS}
              INITIAL_ADMIN_MODE: update
              INSTANCE_ID_PATH: /data/instance
              LOGO_BACKGROUND: none
              LOGO_URL: none
              MEMORY_SESSIONS: "false"
              MESSAGE_RATELIMIT: 200/day
              PERMANENT_SESSION_LIFETIME: "2592000"
              PROXY_AUTH_CREATE: "false"
              PROXY_AUTH_HEADER: X-Auth-Email
              RATELIMIT_STORAGE_URL: redis://dragonfly.databases.svc.cluster.local:6379/2
              SESSION_COOKIE_SECURE: "true"
              SESSION_TIMEOUT: "3600"
              SITENAME: Mailu
              SQLALCHEMY_DATABASE_URI: sqlite:////data/main.db
              SQLALCHEMY_TRACK_MODIFICATIONS: "false"
              SQLITE_DATABASE_FILE: data/main.db
              STATS_ENDPOINT: 19.{}.stats.mailu.io
              TEMPLATES_AUTO_RELOAD: "true"
              WEBSITE: https://mail.${D_HS}
              WELCOME: "true"
              WELCOME_BODY: Welcome to Mailu, your new email service. Please change your password and update your profile.
              WELCOME_SUBJECT: Welcome to Mailu
            envFrom:
              - configMapRef:
                  name: "{{ .Release.Name }}-env-configmap"
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            probes:
              liveness: &adminProbes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: &adminPort 8080
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *adminProbes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
            #  capabilities:
            #    add:
            #      - CHOWN
            #      - SETGID
            #      - SETUID
            #    drop:
            #      - ALL
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 1Gi
      postfix:
        annotations: *reloader
        containers:
          app:
            image:
              repository: ghcr.io/mailu/postfix
              tag: 2024.06.43@sha256:f7395355bb68f402740b417cad9e4acb0830607f3bb535822316c2f9f05e6f00
            env:
              REJECT_UNLISTED_RECIPIENT: "yes"
            envFrom:
              - configMapRef:
                  name: "{{ .Release.Name }}-env-configmap"
            probes:
              liveness: &postfixProbes
                enabled: true
                custom: true
                spec:
                  tcpSocket:
                    port: 25
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *postfixProbes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
            #  capabilities:
            #    add:
            #      - NET_BIND_SERVICE
            #      - CHOWN
            #      - SETGID
            #      - SETUID
            #      - DAC_OVERRIDE
            #    drop:
            #      - ALL
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 1Gi
      dovecot:
        annotations: *reloader
        containers:
          app:
            image:
              repository: ghcr.io/mailu/dovecot
              tag: 2024.06.43@sha256:f96b93175e6d67e94bf498137d9688e3108abe65e87438afc98f07fac3ce7b05
            env:
              COMPRESSION: lz4
              COMPRESSION_LEVEL: "6"
            envFrom:
              - configMapRef:
                  name: "{{ .Release.Name }}-env-configmap"
            probes:
              liveness: &dovecotProbes
                enabled: true
                custom: true
                spec:
                  tcpSocket:
                    port: 993
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 10
                  failureThreshold: 3
              readiness: *dovecotProbes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
            #  capabilities:
            #    add:
            #      - CHOWN
            #      - SETGID
            #      - SETUID
            #      - SYS_CHROOT
            #    drop:
            #      - ALL
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 1Gi
      rspamd:
        annotations: *reloader
        pod:
          hostname: rspamd
        containers:
          app:
            image:
              repository: ghcr.io/mailu/rspamd
              tag: 2024.06.43@sha256:cc883bfadfa2d64fce7fb2000589668a006e4a374a42539f901d2cc017a805d0
            env:
              ANTIVIRUS: none
              ANTIVIRUS_ACTION: discard
              SCAN_MACROS: "false"
            envFrom:
              - configMapRef:
                  name: "{{ .Release.Name }}-env-configmap"
            probes:
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &rspamdPort 11334
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 90
              liveness: &rspamdProbes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *rspamdPort
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *rspamdProbes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
            #  capabilities:
            #    drop:
            #      - ALL
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 1Gi
      webmail:
        annotations: *reloader
        containers:
          app:
            image:
              repository: ghcr.io/mailu/webmail
              tag: 2024.06.43@sha256:d6ddbc1006792a1d820434448ee09b8d13b244910834a447f67e4ed45fbc5914
            env:
              ROUNDCUBE_DB_FLAVOR: postgresql
              ROUNDCUBE_PLUGINS: |-
                archive,zipdownload,markasjunk,managesieve,enigma,carddav,vcard_attachments,mailu
            envFrom:
              - configMapRef:
                  name: "{{ .Release.Name }}-env-configmap"
              - secretRef:
                  name: "{{ .Release.Name }}-webmail-secret"
            probes:
              liveness: &webmailProbes
                enabled: true
                custom: true
                spec:
                  exec:
                    command:
                      # access forbidden by rule
                      - curl
                      - -f
                      - -L
                      - -H
                      - 'User-Agent: health'
                      - http://localhost/ping
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *webmailProbes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
            #  capabilities:
            #    add:
            #      - CHOWN
            #      - SETGID
            #      - SETUID
            #    add:
            #      - CHOWN
            #      - SETGID
            #      - SETUID
            #    drop:
            #      - ALL
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        #    runAsNonRoot: false
        #    runAsUser: 0
        #    runAsGroup: 0
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      front:
        controller: front
        primary: true
        ports:
          http:
            port: *port
          pop3: &pop3
            port: 110
          pop3s: &pop3s
            port: 995
          imap: &imap
            port: 143
          imaps: &imaps
            port: 993
          smtp: &smtp
            port: 25
          smtps: &smtps
            port: 465
          submission: &submission
            port: 587
          lmtp: &lmtp
            port: 2525
          smtp-auth: &smtpAuth
            port: 10025
          imap-auth:
            port: 10143
          sieve:
            port: 14190
      admin:
        controller: admin
        ports:
          http:
            port: *adminPort
      postfix:
        controller: postfix
        ports:
          smtp: *smtp
          smtp-ssl: *smtps
          smtp-starttls: *submission
          smtp-auth: *smtpAuth

      dovecot:
        controller: dovecot
        ports:
          imap-auth:
            port: 2102
          imap-transport: *lmtp
          imap-default: *imap
          pop3: *pop3
          sieve: &sieve
            port: 4190
      rspamd:
        controller: rspamd
        ports:
          rspamd:
            port: 11332
          rspamd-http:
            port: 11334
      webmail:
        controller: webmail
        ports:
          http:
            port: 80
      mail:
        type: LoadBalancer
        controller: front
        annotations:
          lbipam.cilium.io/ips: 192.168.42.150
        externalTrafficPolicy: Local
        ports:
          imap: *imap
          imaps: *imaps
          pop3: *pop3
          pop3s: *pop3s
          smtp: *smtp
          smtps: *smtps
          submission: *submission
          sieve: *sieve
    route:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
        hostnames:
          - mail.${D_HS}
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https-hs
        rules: &rules
          - backendRefs:
              - name: mailu-front
                port: *port
      autodiscover:
        hostnames:
          # ===== HS =====
          - autodiscover.${D_HS}
          - autoconfig.${D_HS}
          # ===== IGI =====
          - autodiscover.${D_IGI}
          - autoconfig.${D_IGI}
          # ===== LMVCA =====
          - autodiscover.${D_LMVCA}
          - autoconfig.${D_LMVCA}
        parentRefs:
          - name: cloudflare
            namespace: kube-system
            sectionName: https-hs
          - name: cloudflare
            namespace: kube-system
            sectionName: https-igi
          - name: cloudflare
            namespace: kube-system
            sectionName: https-lmvca
        rules: *rules
    persistence:
      admin-data:
        existingClaim: *app
        advancedMounts:
          admin:
            app:
              - path: /data
                subPath: admin
              - path: /dkim
                subPath: dkim
      dovecot-data:
        existingClaim: *app
        advancedMounts:
          dovecot:
            app:
              - path: /data
                subPath: dovecotdata
              - path: /mail
                subPath: dovecotmail
      postfix-data:
        existingClaim: "{{ .Release.Name }}-postfix"
        advancedMounts:
          postfix:
            app:
              - path: /queue
                subPath: mailqueue
      rspamd-data:
        existingClaim: "{{ .Release.Name }}-rspamd"
        advancedMounts:
          rspamd:
            app:
              - path: /var/lib/rspamd
                subPath: rspamd
              - path: /etc/rspamd/local.d/maps.d
                subPath: rspamd-local.d-maps.d
      webmail-data:
        existingClaim: "{{ .Release.Name }}-webmail"
        advancedMounts:
          webmail:
            app:
              - path: /data
      certs:
        type: secret
        name: ${D_HS//./-}-tls
        defaultMode: 0444
        items:
          - key: tls.crt
            path: cert.pem
          - key: tls.key
            path: key.pem
        advancedMounts:
          front:
            app:
              - path: /certs
                readOnly: true
