---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app mailu
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: mailu
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      front:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/mailu/nginx
              tag: 2024.06.43
            env:
              REAL_IP_FROM: 0.0.0.0/0
              REAL_IP_HEADER: X-Forwarded-For
              SESSION_COOKIE_SECURE: "true"
            envFrom:
              - configMapRef:
                  name: "{{ .Release.Name }}-env-configmap"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 80
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                add:
                  - NET_BIND_SERVICE
                drop:
                  - ALL
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 1Gi
      admin:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/mailu/admin
              tag: 2024.06.43
            env:
              ADMIN: "true"
              DB_FLAVOR: postgresql
              FETCHMAIL_ENABLED: "false"
              INITIAL_ADMIN_ACCOUNT: alex
              INITIAL_ADMIN_DOMAIN: ${D_HS}
              INITIAL_ADMIN_MODE: ifmissing
              LOGO_BACKGROUND: none
              LOGO_URL: none
              MESSAGE_RATELIMIT: 200/day
              SITENAME: Mailu
              WEBMAIL: roundcube
              WEBSITE: https://mail.${D_HS}
              WEB_ADMIN: /admin
              WELCOME: "true"
              WELCOME_BODY: Welcome to Mailu, your new email service. Please change your password and update your profile.
              WELCOME_SUBJECT: Welcome to Mailu
            envFrom:
              - configMapRef:
                  name: "{{ .Release.Name }}-env-configmap"
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            probes:
              liveness: &adminProbes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: 8080
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *adminProbes
            securityContext:
              <<: *securityContext
              capabilities:
                drop:
                  - ALL
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 1Gi
      postfix:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/mailu/postfix
              tag: 2024.06.43
            env:
              MESSAGE_SIZE_LIMIT: "67108864"
            envFrom:
              - configMapRef:
                  name: "{{ .Release.Name }}-env-configmap"
            probes:
              startup:
                enabled: true
                custom: true
                spec:
                  tcpSocket:
                    port: 25
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 30
              liveness: &postfixProbes
                enabled: true
                custom: true
                spec:
                  tcpSocket:
                    port: 25
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *postfixProbes
            securityContext: *securityContext
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 1Gi
      dovecot:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/mailu/dovecot
              tag: 2024.06.43
            env:
              COMPRESSION: lz4
              COMPRESSION_LEVEL: "6"
            envFrom:
              - configMapRef:
                  name: "{{ .Release.Name }}-env-configmap"
            probes:
              liveness: &dovecotProbes
                enabled: true
                custom: true
                spec:
                  tcpSocket:
                    port: 993
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 10
                  failureThreshold: 3
              readiness: *dovecotProbes
            securityContext: *securityContext
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 1Gi
      rspamd:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          hostname: rspamd
        containers:
          app:
            image:
              repository: ghcr.io/mailu/rspamd
              tag: 2024.06.43
            env:
              ANTIVIRUS: none
              ANTIVIRUS_ACTION: discard
              RATELIMIT_STORAGE_URL: redis://dragonfly.databases.svc.cluster.local:6379/2
            envFrom:
              - configMapRef:
                  name: "{{ .Release.Name }}-env-configmap"
            probes:
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &rspamdPort 11334
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 90
              liveness: &rspamdProbes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *rspamdPort
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *rspamdProbes
            securityContext:
              <<: *securityContext
              capabilities:
                drop:
                  - ALL
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 1Gi
      webmail:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/mailu/webmail
              tag: 2024.06.43
            env:
              ROUNDCUBE_DB_FLAVOR: postgresql
              ROUNDCUBE_PLUGINS: archive,zipdownload,markasjunk,managesieve,enigma,carddav,vcard_attachments,mailu
              WEBROOT_REDIRECT: /webmail
              WEB_WEBMAIL: /webmail
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-webmail-secret"
            probes:
              liveness: &webmailProbes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 80
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *webmailProbes
            securityContext:
              <<: *securityContext
              capabilities:
                drop:
                  - ALL
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
    service:
      mail:
        type: LoadBalancer
        controller: front
        annotations:
          lbipam.cilium.io/ips: 192.168.42.150
        externalTrafficPolicy: Local
        ports:
          imap:
            port: 143
            protocol: TCP
          imaps:
            port: 993
            protocol: TCP
          pop3:
            port: 110
            protocol: TCP
          pop3s:
            port: 995
            protocol: TCP
          smtp:
            port: 25
            protocol: TCP
          smtps:
            port: 465
            protocol: TCP
          submission:
            port: 587
            protocol: TCP
          sieve:
            port: 4190
            protocol: TCP
    route:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
        hostnames:
          - mail.${D_HS}
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https-hs
        rules:
          - backendRefs:
              - name: "{{ .Release.Name }}-front"
                port: &httpPort 80
      autodiscover:
        hostnames:
          # ===== HS =====
          - autodiscover.${D_HS}
          - autoconfig.${D_HS}
          # ===== IGI =====
          - autodiscover.${D_IGI}
          - autoconfig.${D_IGI}
          # ===== LMVCA =====
          - autodiscover.${D_LMVCA}
          - autoconfig.${D_LMVCA}
        parentRefs:
          - name: cloudflare
            namespace: kube-system
            sectionName: https-hs
          - name: cloudflare
            namespace: kube-system
            sectionName: https-igi
          - name: cloudflare
            namespace: kube-system
            sectionName: https-lmvca
        rules:
          - backendRefs:
              - name: "{{ .Release.Name }}-front"
                port: *httpPort
    persistence:
      admin-data:
        existingClaim: *app
        advancedMounts:
          admin:
            app:
              - path: /data
                subPath: admin
              - path: /dkim
                subPath: dkim
      dovecot-data:
        existingClaim: *app
        advancedMounts:
          dovecot:
            app:
              - path: /data
                subPath: dovecotdata
              - path: /mail
                subPath: dovecotmail
      postfix-data:
        existingClaim: "{{ .Release.Name }}-postfix"
        advancedMounts:
          postfix:
            app:
              - path: /queue
                subPath: mailqueue
      rspamd-data:
        existingClaim: "{{ .Release.Name }}-rspamd"
        advancedMounts:
          rspamd:
            app:
              - path: /var/lib/rspamd
                subPath: rspamd
              - path: /etc/rspamd/local.d/maps.d
                subPath: rspamd-local.d-maps.d
      webmail-data:
        existingClaim: "{{ .Release.Name }}-webmail"
        advancedMounts:
          webmail:
            app:
              - path: /data
      certs:
        type: secret
        name: ${D_HS//./-}-tls
        defaultMode: 0444
        advancedMounts:
          front:
            app:
              - path: /certs
                readOnly: true
