---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app falco-sidekick
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: sidekick
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      falco-sidekick:
        containers:
          app:
            image:
              repository: docker.io/falcosecurity/falcosidekick
              tag: 2.32.0@sha256:1976da72151850aae4436f33a5ed94bdef469f42a9b61c182b4feeb5441fb081
            env:
              DEBUG: "false"
              ALERTMANAGER_HOSTPORT: http://kube-prometheus-stack-alertmanager.observability.svc.cluster.local:9093
              ALERTMANAGER_ENDPOINT: /api/v2/alerts
              ALERTMANAGER_MINIMUMPRIORITY: warning
              LOKI_HOSTPORT: http://loki-headless.observability.svc.cluster.local:3100
              LOKI_ENDPOINT: /loki/api/v1/push
              LOKI_FORMAT: text
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: &port 2801
                  initialDelaySeconds: 10
                  periodSeconds: 5
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 512Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
    rbac:
      roles:
        falco-sidekick:
          type: Role
          rules:
            - apiGroups:
                - ""
              resources:
                - endpoints
              verbs:
                - get
      bindings:
        falco-sidekick-rolebinding:
          type: RoleBinding
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: Role
            identifier: *app
          subjects:
            - kind: ServiceAccount
              identifier: *app
              namespace: security
    serviceAccount:
      falco-sidekick: {}
    service:
      app:
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        endpoints:
          - port: http
