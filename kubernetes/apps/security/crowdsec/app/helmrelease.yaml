---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: crowdsec
spec:
  chartRef:
    kind: OCIRepository
    name: crowdsec
  interval: 1h
  values:
    container_runtime: containerd
    secrets:
      externalSecret:
        name: crowdsec-secret
        csLapiSecretKey: CROWDSEC_LAPI_SECRET
        registrationTokenKey: REGISTRATION_TOKEN
    config:
      parsers:
        s01-parse:
          envoy-logs.yaml: |-
            filter: "evt.Parsed.program startsWith 'envoy' && evt.Parsed.message contains ':authority'"
            onsuccess: next_stage
            name: hydaz/envoy-logs
            description: "Parse Envoy access logs to match nginx parser outputs"
            statics:
              - parsed: json
                expression: UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, "envoy")
              - parsed: time_local
                expression: evt.Unmarshaled.envoy["start_time"]
              - parsed: remote_addr
                expression: Split(evt.Unmarshaled.envoy["x-forwarded-for"], ",")[0]
              - parsed: verb
                expression: evt.Unmarshaled.envoy["method"]
              - parsed: request
                expression: evt.Unmarshaled.envoy["x-envoy-origin-path"]
              - parsed: http_version
                expression: TrimPrefix(evt.Unmarshaled.envoy["protocol"], "HTTP/")
              - parsed: status
                expression: Sprintf('%.0f', evt.Unmarshaled.envoy["response_code"])
              - parsed: body_bytes_sent
                expression: Sprintf('%.0f', evt.Unmarshaled.envoy["bytes_sent"])
              - parsed: http_user_agent
                expression: evt.Unmarshaled.envoy["user-agent"]
              - parsed: target_fqdn
                expression: evt.Unmarshaled.envoy[":authority"]
              - meta: service
                value: http
              - meta: log_type
                value: http_access-log
              - meta: source_ip
                expression: evt.Parsed.remote_addr
              - meta: http_status
                expression: evt.Parsed.status
              - meta: http_path
                expression: evt.Parsed.request
              - meta: http_verb
                expression: evt.Parsed.verb
              - meta: http_user_agent
                expression: evt.Parsed.http_user_agent
              - meta: target_fqdn
                expression: evt.Parsed.target_fqdn
        s02-enrich:
          envoy-418-whitelist.yaml: |-
            name: hydaz/envoy-418-whitelist
            description: "Whitelist 418 responses from the envoy bouncer to prevent processing already banned IPs"
            filter: "evt.Meta.service == 'http' && evt.Meta.log_type == 'http_access-log'"
            whitelist:
              reason: "envoy bouncer response to already banned ips"
              expression:
                - "evt.Meta.http_status == '418'"
          wordpress-api-whitelist.yaml: |-
            name: hydaz/wordpress-api-whitelist
            description: "Whitelist legitimate WordPress API calls"
            filter: "evt.Meta.service == 'http' && evt.Meta.log_type == 'http_access-log'"
            whitelist:
              reason: "legitimate wordpress api call"
              expression:
                - "evt.Meta.http_path contains '/wp-json/wp/v2/posts' && evt.Meta.http_path contains 'context=edit' && evt.Meta.http_status == '200'"
      config.yaml.local: |-
        api:
          client:
            unregister_on_exit: true
          server:
            auto_registration:
              enabled: true
              token: "${REGISTRATION_TOKEN}"
              allowed_ranges:
                - 10.42.0.0/16
        db_config:
          type: postgresql
          user: ${DB_USERNAME}
          password: ${DB_PASSWORD}
          db_name: ${DB_NAME}
          host: ${DB_HOST}
          port: 5432
      agent_config.yaml.local: |-
        api:
          client:
            unregister_on_exit: true
      appsec_config.yaml.local: |-
        api:
          client:
            unregister_on_exit: true
      notifications:
        pushover.yaml: |-
          type: http
          name: pushover
          log_level: info
          url: https://api.pushover.net/1/messages.json
          method: POST
          headers:
            Content-Type: application/json
          format: |-
            {{- range . -}}
              {{- $alert := . -}}
              {{- $domains := GetMeta $alert "target_fqdn" -}}
              {{- $domain := "" -}}{{- if $domains }}{{- $domain = index $domains 0 -}}{{- end -}}
              {{- $paths := GetMeta $alert "http_path" | uniq | join "<br>" -}}
              {{- $ASNs := GetMeta $alert "ASNOrg" -}}
              {{- $ASN := "" -}}{{- if $ASNs }}{{- $ASN = index $ASNs 0 -}}{{- end -}}
              {{- $methods := GetMeta $alert "http_verb" -}}
              {{- $method := "" -}}{{- if $methods }}{{- $method = index $methods 0 -}}{{- end -}}
              {{- $statuses := GetMeta $alert "http_status" -}}
              {{- $status := "" -}}{{- if $statuses }}{{- $status = index $statuses 0 -}}{{- end -}}
              {{- $UAs := GetMeta $alert "http_user_agent" -}}
              {{- $UA := "" -}}{{- if $UAs }}{{- $UA = index $UAs 0 -}}{{- end -}}
              {{- range .Decisions -}}
            {
              "token": "{{ env "CROWDSEC_PUSHOVER_TOKEN" }}",
              "user": "{{ env "PUSHOVER_USER_KEY" }}",
              "title": "üõ°Ô∏è CrowdSec: {{ .Value }}",
              "html": "1",
              "url": "https://www.abuseipdb.com/check/{{ .Value }}",
              "url_title": "AbuseIPDB",
              "message": "<b>üß† Scenario:</b> {{ .Scenario }}

              <b>Action:</b> {{ .Type | title }} ¬∑ <b>Duration:</b> {{ .Duration }} ¬∑ <b>Events:</b> {{ len $alert.Events }}

              <b>üåê Target:</b>
              <b>IP:</b> {{ .Value }}
              <b>Domain:</b> {{ $domain }}
              <b>Paths:</b>
              {{ $paths }}

              <b>üìä Request:</b>
              <b>Method:</b> {{ $method }}
              <b>Status:</b> {{ $status }}
              <b>User Agent:</b> {{ $UA }}

              <b>üåç Network:</b>
              <b>Country:</b> {{ $alert.Source.Cn }}
              <b>ASN:</b> {{ $ASN }}"
            }
              {{- end -}}
            {{- end -}}
      profiles.yaml: |-
        name: default_ip_remediation
        debug: false
        filters:
          - Alert.Remediation == true && Alert.GetScope() == "Ip"
        notifications:
          - pushover
        decisions:
          - type: ban
            duration: 24h
        on_success: break
    lapi:
      strategy:
        type: RollingUpdate
      env:
        - name: TZ
          value: Australia/Melbourne
        - name: ENROLL_INSTANCE_NAME
          value: home-ops
      envFrom:
        - secretRef:
            name: crowdsec-secret
      persistentVolume:
        data:
          enabled: false
        config:
          enabled: false
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    agent:
      acquisition:
        - namespace: network
          podName: envoy-*
          program: envoy
          poll_without_inotify: true
      env:
        - name: COLLECTIONS
          value: >-
            crowdsecurity/base-http-scenarios
            crowdsecurity/http-cve
            crowdsecurity/wordpress
        - name: SCENARIOS
          value: crowdsecurity/http-bf-wordpress_bf_xmlrpc
        - name: PARSERS
          value: crowdsecurity/cri-logs
        - name: TZ
          value: Australia/Melbourne
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    appsec:
      enabled: true
      strategy:
        type: RollingUpdate
      acquisitions:
        - source: appsec
          listen_addr: "0.0.0.0:7422"
          path: /
          appsec_config: crowdsecurity/appsec-default
          labels:
            type: appsec
      env:
        - name: APPSEC_CONFIGS
          value: crowdsecurity/appsec-default
        - name: COLLECTIONS
          value: >-
            crowdsecurity/appsec-generic-rules
            crowdsecurity/appsec-virtual-patching
            crowdsecurity/appsec-wordpress
        - name: TZ
          value: Australia/Melbourne
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
