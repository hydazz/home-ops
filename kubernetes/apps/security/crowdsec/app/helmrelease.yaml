---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: crowdsec
spec:
  interval: 1h
  chart:
    spec:
      chart: crowdsec
      version: 0.20.0
      sourceRef:
        kind: HelmRepository
        name: crowdsec
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    container_runtime: containerd
    config:
      parsers:
        s01-parse:
          envoy-logs.yaml: |-
            filter: "evt.Parsed.program startsWith 'envoy'"
            onsuccess: next_stage
            name: hydaz/envoy-logs
            description: "Parse Envoy access logs to match nginx parser outputs"
            statics:
              - parsed: json
                expression: UnmarshalJSON(evt.Line.Raw, evt.Unmarshaled, "envoy")
              - target: evt.StrTime
                expression: evt.Unmarshaled.envoy.start_time
              - parsed: time_local
                expression: evt.Unmarshaled.envoy.start_time
              - parsed: verb
                expression: evt.Unmarshaled.envoy.method
              - parsed: http_version
                expression: TrimPrefix(evt.Unmarshaled.envoy.protocol, "HTTP/")
              - parsed: request
                expression: evt.Unmarshaled.envoy["x-envoy-origin-path"]
              - parsed: status
                expression: evt.Unmarshaled.envoy.response_code
              - parsed: body_bytes_sent
                expression: evt.Unmarshaled.envoy.bytes_sent
              - parsed: http_user_agent
                expression: evt.Unmarshaled.envoy["user-agent"]
              - parsed: target_fqdn
                expression: evt.Unmarshaled.envoy[":authority"]
              - parsed: remote_addr
                expression: |
                  Trim(
                    Split(
                      Trim(evt.Unmarshaled.envoy.downstream_remote_address, "[]"),
                      ":"
                    )[0],
                    "[]"
                  )
              - meta: service
                value: http
              - meta: log_type
                value: http_access-log
              - meta: http_path
                expression: evt.Parsed.request
              - meta: http_status
                expression: evt.Parsed.status
              - meta: http_verb
                expression: evt.Parsed.verb
              - meta: http_user_agent
                expression: evt.Parsed.http_user_agent
              - meta: target_fqdn
                expression: evt.Parsed.target_fqdn
              - meta: source_ip
                expression: evt.Parsed.remote_addr
              - meta: bytes_received
                expression: evt.Unmarshaled.envoy.bytes_received
              - meta: duration_ms
                expression: evt.Unmarshaled.envoy.duration
              - meta: request_id
                expression: evt.Unmarshaled.envoy["x-request-id"]
      config.yaml.local: |-
        api:
          server:
            auto_registration:
              enabled: true
              token: "${REGISTRATION_TOKEN}"
              allowed_ranges:
                - 10.42.0.0/16
        db_config:
          type:     postgresql
          user:     ${DB_USERNAME}
          password: ${DB_PASSWORD}
          db_name:  ${DB_NAME}
          host:     ${DB_HOST}
          port:     5432
    lapi:
      env:
        - name: TZ
          value: Australia/Melbourne
        - name: ENROLL_INSTANCE_NAME
          value: home-ops
      envFrom:
        - secretRef:
            name: crowdsec-secret
      persistentVolume:
        data:
          enabled: false
        config:
          enabled: false
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    agent:
      isDeployment: true
      additionalAcquisition:
        - source: loki
          url: http://loki-headless.observability.svc.cluster.local:3100
          query: |-
            {app=~".+"} | container =~ `nginx`
            | json
            | line_format "{{ .log }}"
            | regexp "^\\S+\\s+\\S+\\s+\\S+\\s+(?P<message>.+)$"
            | line_format "{{ .message }}"
          labels:
            type: nginx
      env:
        - name: TZ
          value: Australia/Melbourne
        - name: COLLECTIONS
          value: >-
            crowdsecurity/base-http-scenarios
            crowdsecurity/http-cve
            crowdsecurity/nginx
            crowdsecurity/wordpress
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    appsec:
      enabled: true
      acquisitions:
        - source: appsec
          listen_addr: "0.0.0.0:7422"
          path: /
          appsec_config: crowdsecurity/virtual-patching
          labels:
            type: appsec
      env:
        - name: COLLECTIONS
          value: crowdsecurity/appsec-virtual-patching
        - name: APPSEC_CONFIGS
          value: crowdsecurity/appsec-default
