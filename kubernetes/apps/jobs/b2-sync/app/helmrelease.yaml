# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: b2-sync
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      kopia-sync:
        type: cronjob
        cronjob: &cronJobSpec
          schedule: "@daily"
          backoffLimit: 0
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
          timeZone: "Australia/Melbourne"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/kopia
              tag: 0.21.1@sha256:f666b5f2c1ea4649cd2bd703507d4b81c2b515782e8476ba4a145b091a704a53
            command:
              - /bin/bash
              - -c
              - |
                set -euo pipefail
                echo -e "\033[1;34m[INFO] Connecting to Kopia repository...\033[0m"
                kopia repository connect filesystem \
                  --path /data/kopia \
                  --readonly \
                  --password="${KOPIA_PASSWORD}"
                echo -e "\033[1;34m[INFO] Starting Kopia sync-to B2...\033[0m"
                # best way i've found to get the logs outputted ¯\_(ツ)_/¯
                stdbuf -oL -eL \
                  kopia repository sync-to b2 \
                    --bucket=b2backup-kopia \
                    --key-id="${B2_ACCESS_KEY_ID}" \
                    --key="${B2_SECRET_ACCESS_KEY}" \
                    --delete \
                    --parallel=8 2>&1 | \
                  stdbuf -oL sed 's/\r/\n/g'
                echo -e "\033[1;32m[SUCCESS] Kopia sync complete.\033[0m"
            envFrom:
              - secretRef:
                  name: kopia-sync-secret
      volsync-sync:
        type: cronjob
        cronjob:
          <<: *cronJobSpec
          schedule: "0 4 * * *"
        containers:
          app:
            image:
              repository: docker.io/restic/restic
              tag: 0.18.0@sha256:4cf4a61ef9786f4de53e9de8c8f5c040f33830eb0a10bf3d614410ee2fcb6120
            command:
              - /bin/sh
              - -c
              - |
                set -eu
                apk add --no-cache rclone -qq
                echo -e "\033[1;33m[SYNC] Syncing /data/volsync → b2:b2backup-k8s:volsync\033[0m"
                rclone sync \
                  /data/volsync \
                  ":b2,account=$B2_ACCOUNT_ID,key=$B2_ACCOUNT_KEY:b2backup-k8s/volsync" \
                  --b2-hard-delete \
                  --transfers=16 \
                  --checkers=16
                echo -e "\033[1;32m[OK] Rclone sync complete.\033[0m"
                echo -e "\033[1;34m[INFO] Running restic checks on all remote repos...\033[0m"
                for repo_dir in $(rclone lsf ":b2,account=$B2_ACCOUNT_ID,key=$B2_ACCOUNT_KEY:b2backup-k8s/volsync" --dirs-only); do
                  repo="b2:b2backup-k8s:volsync/${repo_dir%/}"
                  echo -e "\033[1;33m[CHECK] Running restic check on: $repo\033[0m"
                  restic check --repo "$repo" >/dev/null
                  echo -e "\033[1;32m[OK] Restic check passed for $repo_dir\033[0m"
                done
                echo -e "\033[1;32m[SUCCESS] All rclone syncs and restic checks complete.\033[0m"
            envFrom:
              - secretRef:
                  name: volsync-sync-secret
    persistence:
      kopia-data:
        type: nfs
        server: 192.168.42.20
        path: /mnt/Slow/Backups/
        advancedMounts:
          kopia-sync:
            app:
              - path: /data/kopia
                subPath: Kopia
          volsync-sync:
            app:
              - path: /data/volsync
                subPath: Volsync
